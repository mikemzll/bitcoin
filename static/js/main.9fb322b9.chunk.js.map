{"version":3,"sources":["store/index.ts","modules/home/constants/home.ts","modules/home/services/home.service.ts","modules/home/components/Home/Home.tsx","modules/core/constants/routes.ts","common/components/Routes/AppRouter.tsx","modules/core/components/AppCore/AppCore.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["store","createStoreon","process","SYMBOL_LIST","SPACE","stringToIdList","message","symbolList","split","map","symbol","indexOf","idListToString","idList","stringList","id","length","reduce","prevValue","currentValue","prepareSymbolList","dataList","string","filter","item","encryptIdList","messageIdList","keywordIdList","maxId","i","decryptIdList","val","HomeComponent","useState","output","setOutput","input","setInput","key","setKey","setSymbolList","decrypt","setTimeout","decryptMessage","encrypt","encryptMessage","keyword","HomeService","eMessageIdList","eMessage","useEffect","className","type","label","placeholder","value","onChange","e","target","InputComponent","htmlFor","cols","rows","HOME","path","component","DEFAULT_PAGE","generatePath","AppRouter","basename","render","to","AppCore","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fb322b9.chunk.js","sourcesContent":["import { createStoreon } from 'storeon';\nimport { storeonDevtools } from 'storeon/devtools';\n\nconst store = createStoreon([\n  process.env.NODE_ENV !== 'production' && storeonDevtools\n]);\n\nexport default store;\n","const UKRAINIAN_ALPHABET = \"А а Б б В в Г г Ґ ґ Д д Е е Є є Ж ж З з И и І і Ї ї Й й К к Л л М м Н н О о П п Р р С с Т т У у Ф ф Х х Ц ц Ч ч Ш ш Щ щ Ь ь Ю ю Я я\";\nconst RUSSIAN_LETTERS = \"Э э Ы ы Ъ ъ\";\nconst CYRYLIC_LETTERS = \"\";\nconst LATIN_ALPHABET = \"A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z\";\nconst LATIN_LETTERS = \"é\";\nconst SYMBOLS = \"~ ` \\\" ' ^ ° « » > < : ; % § + - * — _ & . , ! ? / | ( ) [ ] { } $ ¥ ¢ € £ # @ \\n\";\nconst EXTRA_SYMBOLS = \"&#712; ​&#716; &#x301;\";\nconst NUMBERS = \"0 1 2 3 4 5 6 7 8 9\";\n\nexport const SYMBOL_LIST = [\n  UKRAINIAN_ALPHABET,\n  RUSSIAN_LETTERS,\n  CYRYLIC_LETTERS,\n  LATIN_ALPHABET,\n  LATIN_LETTERS,\n  SYMBOLS,\n  EXTRA_SYMBOLS,\n  NUMBERS\n];\n\nexport const SPACE = ' ';\nexport const DIVIDER = ' ';\n","import { DIVIDER, SPACE } from '../constants/home';\n\nclass HomeService {\n  stringToIdList = (message: string, symbolList: string[]): number[] => {\n    return message.split('').map((symbol: string) => symbolList.indexOf(symbol));\n  }\n\n  idListToString = (idList: number[], symbolList: string[]): string => {\n    const stringList = idList.map((id: number) => symbolList[id]);\n    return stringList.length ? stringList.reduce((prevValue, currentValue) => prevValue + currentValue) : '';\n  }\n\n  prepareSymbolList = (dataList: string[]): string[] => {\n    const mergeArrays = (prevValue: string[], currentValue: string[]) => [...prevValue, ...currentValue];\n    const symbolList = dataList.map((string: string) => string.split(DIVIDER)).reduce(mergeArrays).filter((item) => !!item);\n    return [SPACE, ...symbolList, SPACE];\n  }\n\n  encryptIdList = (messageIdList: number[], keywordIdList: number[], maxId: number): number[] => {\n    const eIdList = messageIdList.map((id, i) => (id + keywordIdList[i % keywordIdList.length]) % maxId);\n\n    return eIdList;\n  }\n  \n  decryptIdList = (messageIdList: number[], keywordIdList: number[], maxId: number): number[] => {\n    const eIdList = messageIdList.map((id, i) => {\n      const val = id - keywordIdList[i % keywordIdList.length]\n      \n      return val > 0 ? val : maxId + val;\n    });\n\n    return eIdList;\n  }\n}\n\nexport default new HomeService();\n","import React, { FC, SyntheticEvent, useEffect, useState } from 'react';\nimport { SYMBOL_LIST } from '../../constants/home';\nimport HomeService from '../../services/home.service';\n\nimport './Home.scss';\n\nconst HomeComponent = () => {\n  const [output, setOutput] = useState<string>('');\n  const [input, setInput] = useState<string>('');\n  const [key, setKey] = useState<string>('');\n  const [symbolList, setSymbolList] = useState<string[]>([]);\n  \n  const title = \"Теряйся Вася!\";\n\n  const decrypt = (output: string, key: string) => {\n    setTimeout(() => {setInput(decryptMessage(output, key, symbolList))}, 500);\n  }\n\n  const encrypt = (input: string, key: string) => {\n    setTimeout(() => {setOutput(encryptMessage(input, key, symbolList))}, 500);\n  }\n\n  const updateKey = (value: string) => {\n    setKey(value);\n    \n    if (!value) {\n      setOutput(input);\n      return;\n    }\n    if (input) encrypt(input, value);\n    if (!input && output) decrypt(output, value);\n  }\n\n  const updateInput = (value: string) => {\n    setInput(value);\n\n    if (key) encrypt(value, key);\n    if (!key) setOutput(value);\n  }\n\n  const updateOutput = (value: string) => {\n    setOutput(value);\n    if (key) decrypt(value, key);\n    if (!key) setInput(value);\n  }\n\n  const encryptMessage = (message: string, keyword: string, symbolList: string[]): string => {\n    const maxId = symbolList.length - 1;\n    const messageIdList = HomeService.stringToIdList(message, symbolList);\n    const keywordIdList = HomeService.stringToIdList(keyword, symbolList);\n    \n    const eMessageIdList = HomeService.encryptIdList(messageIdList, keywordIdList, maxId);\n    const eMessage = HomeService.idListToString(eMessageIdList, symbolList);\n    \n    return eMessage;\n  };\n\n  const decryptMessage = (eMessage: string, keyword: string, symbolList: string[]): string => {\n    const maxId = symbolList.length - 1;\n    const eMessageIdList = HomeService.stringToIdList(eMessage, symbolList);\n    const keywordIdList = HomeService.stringToIdList(keyword, symbolList);\n\n    const messageIdList = HomeService.decryptIdList(eMessageIdList, keywordIdList, maxId);\n    const message = HomeService.idListToString(messageIdList, symbolList);\n\n    return message;\n  };\n\n  useEffect(() => {\n    setSymbolList(HomeService.prepareSymbolList(SYMBOL_LIST));\n  }, []);\n\n  return (\n    <div className=\"home-wrapper\">\n      <div className=\"home\">\n        <div className=\"title\">\n          <h1>{title}</h1>\n        </div>\n        <div>\n          <InputComponent type=\"input\" label={'Ключ'} placeholder={'ключове слово ...'} value={key} onChange={(e) => {updateKey((e.target as HTMLInputElement).value)}} />\n          <div>\n            <InputComponent label={'Текст'} placeholder={'сообщение ...'} value={input} onChange={(e) => {updateInput((e.target as HTMLInputElement).value)}} />\n            <InputComponent label={'Bitcoin'} placeholder={'выхлоп тут...'} value={output} onChange={(e) => {updateOutput((e.target as HTMLInputElement).value)}} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomeComponent;\n\ninterface InputComponentProps {\n  value: string;\n  onChange: (event: SyntheticEvent) => void;\n  type?: 'input' | 'textarea';\n  label?: string;\n  placeholder?: string;\n  id?: string;\n}\n\nconst InputComponent: FC<InputComponentProps> = ({\n  type = 'textarea',\n  label,\n  placeholder,\n  value,\n  onChange = () => {},\n  id\n}) => {\n  return (\n    <div className=\"input\">\n      {label && <label htmlFor={id}>{label}</label>}\n\n      <div className=\"input-wrapper\">\n        {type === 'textarea' && (\n          <textarea id={id} cols={30} rows={10} placeholder={placeholder} value={value} onChange={onChange}></textarea>\n        )}\n        {type === 'input' && (\n          <input id={id} placeholder={placeholder} value={value} onChange={onChange} />\n        )}\n      </div>\n    </div>\n  );\n};","import HomeComponent from '../../home/components/Home/Home';\nimport { generatePath } from 'react-router-dom';\n\nconst ROUTES = {\n  HOME: {\n    path: '/',\n    component: HomeComponent,\n  },\n};\n\nconst { HOME } = ROUTES;\n\nexport const DEFAULT_PAGE = generatePath(HOME.path);\n\nexport const BASE_NAME = '/bitcoin';\n\nexport { HOME};","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { DEFAULT_PAGE, BASE_NAME, HOME } from '../../../modules/core/constants/routes';\n\nconst AppRouter = () => {\n  return (\n    <Router basename={BASE_NAME}>\n      <div className=\"page-wrapper\">\n        <Switch>\n          <Route path={HOME.path}>\n            <HOME.component />\n          </Route>\n          <Route path=\"/\" render={() => <Redirect to={DEFAULT_PAGE} />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;","import React from 'react';\nimport Router from '../../../../common/components/Routes/AppRouter';\n\nconst AppCore = () => {\n  return <Router />;\n};\n\nexport default AppCore;","import React from 'react';\nimport { StoreContext } from 'storeon/react';\nimport store from './store/index';\nimport AppCore from './modules/core/components/AppCore/AppCore';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <StoreContext.Provider value={store}>\n      <AppCore />\n    </StoreContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}